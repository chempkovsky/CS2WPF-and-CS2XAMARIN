<#@ template language="C#" HostSpecific="True" Debug="True" #>
<#@ output extension="jsonpmm2txt" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="CS2WPF" #>
<#@ import namespace="CS2WPF.Model" #>
<#@ import namespace="CS2WPF.Model.Serializable" #>
<#@ parameter type="CS2WPF.Model.Serializable.ModelViewSerializable" name="Model" #>
<#@ parameter type="CS2WPF.Model.Serializable.DbContextSerializable" name="Context" #>
<#@ include file="..\..\CommonScripts\ViewLevel.t4" #>
<#

    string EformModeEnumFolder                      = "00026-EformModeEnum.cs";
    string EformModeEnumClassName                   = GetContextModelClassName(Context, EformModeEnumFolder);
    string EformModeEnumNameSpace                   = GetContextModelNameSpace(Context, EformModeEnumFolder);

    string IAppGlblSettingsServiceFolder            = "00080-IAppGlblSettingsService.cs";
    string IAppGlblSettingsServiceClassName         = GetContextModelClassName(Context, IAppGlblSettingsServiceFolder);
    string IAppGlblSettingsServiceNameSpace         = GetContextModelNameSpace(Context, IAppGlblSettingsServiceFolder);

    string ISformViewModelInterfaceFolder           = "00198-ISformViewModelInterface.cs";
    string ISformViewModelInterfaceClassName        = GetContextModelClassName(Context, ISformViewModelInterfaceFolder);
    string ISformViewModelInterfaceNameSpace        = GetContextModelNameSpace(Context, ISformViewModelInterfaceFolder);

    string IWebServiceFilterRsltInterfaceFolder     = "00204-IWebServiceFilterRsltInterface.cs";
    string IWebServiceFilterRsltInterfaceClassName  = GetContextModelClassName(Context, IWebServiceFilterRsltInterfaceFolder);
    string IWebServiceFilterRsltInterfaceNameSpace  = GetContextModelNameSpace(Context, IWebServiceFilterRsltInterfaceFolder);

    string IWebServiceFilterMenuInterfaceFolder     = "00206-IWebServiceFilterMenuInterface.cs";
    string IWebServiceFilterMenuInterfaceClassName  = GetContextModelClassName(Context, IWebServiceFilterMenuInterfaceFolder);
    string IWebServiceFilterMenuInterfaceNameSpace  = GetContextModelNameSpace(Context, IWebServiceFilterMenuInterfaceFolder);

    string WebServiceFilterRsltViewModelFolder      = "00215-WebServiceFilterRsltViewModel.cs";
    string WebServiceFilterRsltViewModelClassName   = GetContextModelClassName(Context, WebServiceFilterRsltViewModelFolder);
    string WebServiceFilterRsltViewModelNameSpace   = GetContextModelNameSpace(Context, WebServiceFilterRsltViewModelFolder);

    string WebServiceFilterMenuViewModelFolder      = "00217-WebServiceFilterMenuViewModel.cs";
    string WebServiceFilterMenuViewModelClassName   = GetContextModelClassName(Context, WebServiceFilterMenuViewModelFolder);
    string WebServiceFilterMenuViewModelNameSpace   = GetContextModelNameSpace(Context, WebServiceFilterMenuViewModelFolder);

    string RegionAwareViewModelBaseFolder           = "00648-RegionAwareViewModelBase.cs";
    string RegionAwareViewModelBaseClassName        = GetContextModelClassName(Context, RegionAwareViewModelBaseFolder);
    string RegionAwareViewModelBaseNameSpace        = GetContextModelNameSpace(Context, RegionAwareViewModelBaseFolder);

    string AccessDeniedUserControlFolder            = "00678-AccessDeniedUserControl.xaml.cs";
    string AccessDeniedUserControlClassName         = GetContextModelClassName(Context, AccessDeniedUserControlFolder);
    string AccessDeniedUserControlNameSpace         = GetContextModelNameSpace(Context, AccessDeniedUserControlFolder);

    string PageNotFoundUserControlFolder            = "00684-PageNotFoundUserControl.xaml.cs";
    string PageNotFoundUserControlClassName         = GetContextModelClassName(Context, PageNotFoundUserControlFolder);
    string PageNotFoundUserControlNameSpace         = GetContextModelNameSpace(Context, PageNotFoundUserControlFolder);

    string modelInterfaceFolder                     = "01100-Interface.cs";
    string modelInterfaceClassName                  = GetInterfaceName(Model);
    string modelInterfaceNameSpace                  = GetModelNameSpace(Model, modelInterfaceFolder);


    string SformUserControlFolder           = "01420-SformUserControl.xaml.cs";
    string SformUserControlClassName        = GetModelClassName(Model, SformUserControlFolder);
    string SformUserControlNameSpace        = GetModelNameSpace(Model, SformUserControlFolder);
    string SformUserControlProject          = GetModelProjectName(Model, SformUserControlFolder);


    string ReditUserControlFolder           = "01816-ReditUserControl.xaml.cs";
    string ReditUserControlClassName        = GetModelClassName(Model, ReditUserControlFolder);
    string ReditUserControlNameSpace        = GetModelNameSpace(Model, ReditUserControlFolder);

    string RlistUserControlFolder           = "01916-RlistUserControl.xaml.cs";
    string RlistUserControlClassName        = GetModelClassName(Model, RlistUserControlFolder);
    string RlistUserControlNameSpace        = GetModelNameSpace(Model, RlistUserControlFolder);
    string RlistUserControlProject          = GetModelProjectName(Model, RlistUserControlFolder);

    string RlistViewModelFolder             = "01920-RlistViewModel.cs";
    string RlistViewModelClassName          = GetModelClassName(Model, RlistViewModelFolder);
    string RlistViewModelNameSpace          = GetModelNameSpace(Model, RlistViewModelFolder);


    string HiddenFiltersPropertyName                 = "HiddenFilters";
    string OnHiddenFiltersChangedPropertyName        = "OnHiddenFiltersChanged";
    string HiddenFiltersPropertyChangedPropertyName  = "HiddenFiltersPropertyChanged";

    string TableMenuItemsPropertyName                = "TableMenuItems";
    string TableMenuItemsPropertyChangedPropertyName = "TableMenuItemsPropertyChanged";

    string RowMenuItemsPropertyName                  = "RowMenuItems";
    string RowMenuItemsPropertyChangedPropertyName   = "RowMenuItemsPropertyChanged";


    string RegionPropertyName                   = "Region";
    string RlistUserControlRegionPropertyName   = "RlistUserControlRegion";


    string FormRootServicePropertyName          = "FrmRootSrv";
    string AppSettingServicePropertyName        = "GlblSettingsSrv";
    string GetWithFilterMethodName              = "getwithfilter";
    string ColumnSelectorDlgPropertyName        = "ColumnSelectorDlg";




    string SformAfterAddItemPropertyName        = "SformAfterAddItem";
    string SformAfterUpdItemPropertyName        = "SformAfterUpdItem";
    string SformAfterDelItemPropertyName        = "SformAfterDelItem";


    string SformAddItemCommandPropertyName      = "SformAddItemCommand";
    string SformUpdItemCommandPropertyName      = "SformUpdItemCommand";
    string SformDelItemCommandPropertyName      = "SformDelItemCommand";
    string SformAfterAddItemCommandPropertyName = "SformAfterAddItemCommand";
    string SformAfterUpdItemCommandPropertyName = "SformAfterUpdItemCommand";
    string SformAfterDelItemCommandPropertyName = "SformAfterDelItemCommand";
    string SformLoadedCommandPropertyName       = "SformLoadedCommand";


    string TableMenuItemsCommandPropertyName    = "TableMenuItemsCommand";
    string RowMenuItemsCommandPropertyName      = "RowMenuItemsCommand";
    string SelectedRowPropertyName              = "SelectedRow";
    string SelectedRowCommandPropertyName       = "SelectedRowCommand";


    string FormControlModelPropertyName         = "FormControlModel";
    string CaptionPropertyName                  = "Caption";
    string EformModePropertyName                = "EformMode";
    string ShowSubmitPropertyName               = "ShowSubmit";
    string FormServicePrefix                    = "FrmSrv";
    string RowMIPrefixPropertyName              = "RowMI";

    string GetOneMethodName                     = "getone";
    string CopyToModelNotifyMethodName          = "CopyToModelNotify";
    string CopyToModelMethodName                = "CopyToModel";

    string FilterHeightPropertyName             = "FilterHeight";
    string GridHeightPropertyName               = "GridHeight";

    string IsParentLoadedPropertyName           = "IsParentLoaded";

    string CurrentNavigationContextPropertyName = "CurrentNavigationContext";
    string ShowBackBtnPropertyName              = "ShowBackBtn";
    string OnNavigationBackCommandPropertyName  = "OnNavigationBackCommand";

    string CanAddPropertyName                   = "CanAdd";
    string CanUpdPropertyName                   = "CanUpdate";
    string CanDelPropertyName                   = "CanDelete";
    string CanAddParentPropertyName             = "CanAddParent";
    string CanUpdParentPropertyName             = "CanUpdateParent";
    string CanDelParentPropertyName             = "CanDeleteParent";

    string CanAddDetailPropertyName             = "CanAddDetail"; 
    string CanUpdDetailPropertyName             = "CanUpdateDetail"; 
    string CanDelDetailPropertyName             = "CanDeleteDetail"; 
    string CanAddDetailParentPropertyName       = "CanAddDetailParent"; 
    string CanUpdDetailParentPropertyName       = "CanUpdateDetailParent"; 
    string CanDelDetailParentPropertyName       = "CanDeleteDetailParent"; 

    List<string> detailViews = GetDetailViews(Model, Context, null);
    List<ModelViewPropertyOfVwSerializable> primKeys = GetModelPrimaryKeyProps(Model);
    List<string> detailViewNamesToExclude = new List<string>();
    // m2mMdl, m2mFk, searchFks, otherFks, externalFks
    Tuple<ModelViewSerializable, ModelViewForeignKeySerializable, List<KeyValuePair<ModelViewForeignKeySerializable,int>>, List<KeyValuePair<ModelViewForeignKeySerializable,int>>, List<KeyValuePair<ModelViewForeignKeySerializable,int>>> tmpSearchSchema = null;
    // m2mMdl, m2mFk, searchFks, otherFks, externalFks
    List<Tuple<ModelViewSerializable, ModelViewForeignKeySerializable, List<KeyValuePair<ModelViewForeignKeySerializable,int>>, List<KeyValuePair<ModelViewForeignKeySerializable,int>>, List<KeyValuePair<ModelViewForeignKeySerializable,int>>>> searchSchemas =
        GetSearchResources(Model, Context);

    List<string> nmSpaces = new List<string>();
    if ((RlistViewModelNameSpace != IWebServiceFilterRsltInterfaceNameSpace) && (nmSpaces.IndexOf(IWebServiceFilterRsltInterfaceNameSpace) < 0)) 
        nmSpaces.Add(IWebServiceFilterRsltInterfaceNameSpace);
    if ((RlistViewModelNameSpace != WebServiceFilterRsltViewModelNameSpace) && (nmSpaces.IndexOf(WebServiceFilterRsltViewModelNameSpace) < 0)) 
        nmSpaces.Add(WebServiceFilterRsltViewModelNameSpace);
    if ((RlistViewModelNameSpace != IAppGlblSettingsServiceNameSpace) && (nmSpaces.IndexOf(IAppGlblSettingsServiceNameSpace) < 0)) 
        nmSpaces.Add(IAppGlblSettingsServiceNameSpace);
    if ((RlistViewModelNameSpace != WebServiceFilterMenuViewModelNameSpace) && (nmSpaces.IndexOf(WebServiceFilterMenuViewModelNameSpace) < 0)) 
        nmSpaces.Add(WebServiceFilterMenuViewModelNameSpace);
    if ((RlistViewModelNameSpace != IWebServiceFilterMenuInterfaceNameSpace) && (nmSpaces.IndexOf(IWebServiceFilterMenuInterfaceNameSpace) < 0)) 
        nmSpaces.Add(IWebServiceFilterMenuInterfaceNameSpace);
    if ((RlistViewModelNameSpace != IWebServiceFilterMenuInterfaceNameSpace) && (nmSpaces.IndexOf(IWebServiceFilterMenuInterfaceNameSpace) < 0)) 
        nmSpaces.Add(IWebServiceFilterMenuInterfaceNameSpace);
    if ((RlistViewModelNameSpace != EformModeEnumNameSpace) && (nmSpaces.IndexOf(EformModeEnumNameSpace) < 0)) 
        nmSpaces.Add(EformModeEnumNameSpace);
    if ((RlistViewModelNameSpace != modelInterfaceNameSpace) && (nmSpaces.IndexOf(modelInterfaceNameSpace) < 0)) 
        nmSpaces.Add(modelInterfaceNameSpace);
    if ((RlistViewModelNameSpace != ISformViewModelInterfaceNameSpace) && (nmSpaces.IndexOf(ISformViewModelInterfaceNameSpace) < 0)) 
        nmSpaces.Add(ISformViewModelInterfaceNameSpace);
    if ((RlistViewModelNameSpace != RegionAwareViewModelBaseNameSpace) && (nmSpaces.IndexOf(RegionAwareViewModelBaseNameSpace) < 0)) 
        nmSpaces.Add(RegionAwareViewModelBaseNameSpace);

    bool IsInTheSameModule = (SformUserControlProject == RlistUserControlProject);
    
    
#>
{
"PrismMMMCallItems": [

<#
    if(!IsInTheSameModule) {
#>
    {
    "Description": [
    '"<#= SformUserControlClassName #>"-UserControl is defined in the "<#= SformUserControlProject #>"-project.',
    'In the file of IModule-class of "<#= SformUserControlProject #>"-project the following line of code must be inserted:',
    ' ',
    '    public void OnInitialized(IContainerProvider containerProvider)',
    '    {',
    '        ...',
    '        IRegionManager regionManager = containerProvider.Resolve(typeof(IRegionManager)) as IRegionManager;',
    '        if (regionManager != null)',
    '        {',
    '            ...',
    '            // According to requirements of the "<#= RlistViewModelClassName #>.cs"-file of "<#= RlistUserControlProject #>"-project. ',
    '            regionManager.RegisterViewWithRegion("<#= SformUserControlClassName #><#= RlistUserControlRegionPropertyName #>", typeof(<#= SformUserControlClassName #>));',
    '            ...',
    '        }',
    '        ...',
    '    }'
    ],
<#
{
    string SformUserControlNameSpaceAndClassName            = SformUserControlNameSpace + "." + SformUserControlClassName;
    string destProjectName                                  = GetModelProjectUniqueName(Model, SformUserControlFolder);
    string destImplementedInterface                         = "Prism.Modularity.IModule";
    string destMethodName                                   = "OnInitialized";
    string[] destMethodParamTypes                           = new string[] {"Prism.Ioc.IContainerProvider"};
    string destMethodAccessType                             = "public";
    string destMethodParamTypeForVar                        = "Prism.Ioc.IContainerProvider";
    string invocationVarType                                = "Prism.Regions.IRegionManager";
    string invocationMethodName                             = "RegisterViewWithRegion";
    string[] invocationGenerics                             = new string[]{};
    string[] invocationParams                               = new string[]{"\"" + SformUserControlClassName + RlistUserControlRegionPropertyName  +"\"", "typeof("+SformUserControlNameSpaceAndClassName+")"};
    //result = PrismModifier.UpdateMethodWithVarIdentifier(destProjectName,  destImplementedInterface, destMethodName, destMethodParamTypes, destMethodAccessType, destMethodParamTypeForVar,
    //                    invocationVarType, invocationMethodName, invocationGenerics, invocationParams);
#>
    "MethodName": 'UpdateMethodWithVarIdentifier',
    "DestProjectName": '<#= destProjectName #>',
    "DestImplementedInterface": '<#= destImplementedInterface #>',
    "DestMethodName": '<#= destMethodName #>',
    "DestMethodParamTypes": ['<#= destMethodParamTypes[0] #>'],
    "DestMethodAccessType": '<#= destMethodAccessType #>',
    "DestMethodParamTypeForVar": '<#= destMethodParamTypeForVar #>',
    "InvocationVarType": '<#= invocationVarType #>',
    "InvocationParamType": '',
    "InvocationClassType": '',
    "InvocationMethodName": '<#= invocationMethodName #>',
    "InvocationGenerics": [],
    "InvocationParams": ['<#= invocationParams[0] #>','<#= invocationParams[1] #>'],
    "StepDescription": 'Insertion the line : regionManager.RegisterViewWithRegion("<#= SformUserControlClassName #><#= RlistUserControlRegionPropertyName #>", typeof(<#= SformUserControlClassName #>));'
    },
<#
}
    }
#>
    {
    "Description": [
    '"<#= RlistUserControlClassName #>" UserControl is defined in the "<#= RlistUserControlProject #>"-project.',
    'In the file of IModule-class of "<#= RlistUserControlProject #>"-project the following line of code must be inserted:',
    ' ',
    '    public void RegisterTypes(IContainerRegistry containerRegistry)',
    '    {',
    '        ...',
    '        // According to requirements of the "<#= RlistViewModelClassName #>.cs"-file of "<#= RlistUserControlProject #>"-project. ',
    '        ViewModelLocationProvider.Register<<#= RlistUserControlClassName #>, <#= RlistViewModelClassName #>>();',
    '        // According to requirements of the "<#= RlistViewModelClassName #>.cs"-file of "<#= RlistUserControlProject #>"-project. ',
    '        containerRegistry.RegisterForRegionNavigation<<#= RlistUserControlClassName #>, <#= RlistViewModelClassName #>>("<#= RlistUserControlClassName #>");',
    '        // According to requirements of the "<#= RlistViewModelClassName #>.cs"-file of "<#= RlistUserControlProject #>"-project. ',
    '        containerRegistry.Register<ContentView, <#= RlistUserControlClassName #>>("<#= RlistUserControlClassName #>");',
    '        ...',
    '    }'
    ],
<#
    {
    string RlistUserControlNameSpaceAndClassName            = RlistUserControlNameSpace + "." + RlistUserControlClassName;
    string RlistViewModelNameSpaceAndClassName              = RlistViewModelNameSpace + "." + RlistViewModelClassName;
    string destProjectName                                  = GetModelProjectUniqueName(Model, RlistUserControlFolder);
    string destImplementedInterface                         = "Prism.Modularity.IModule";
    string destMethodName                                   = "RegisterTypes";
    string[] destMethodParamTypes                           = new string[] {"Prism.Ioc.IContainerRegistry"};
    string destMethodAccessType                             = "public";
    string invocationClassType                              = "Prism.Mvvm.ViewModelLocationProvider";
    string invocationMethodName                             = "Register";
    string[] invocationGenerics                             = new string[]{RlistUserControlNameSpaceAndClassName, RlistViewModelNameSpaceAndClassName};
    string[] invocationParams                               = new string[]{};
    //result = PrismModifier.UpdateMethodWithClassIdentifier(destProjectName,  destImplementedInterface, destMethodName, destMethodParamTypes, destMethodAccessType,
    //                    invocationClassType, invocationMethodName, invocationGenerics, invocationParams);
#>
    "MethodName": 'UpdateMethodWithClassIdentifier',
    "DestProjectName": '<#= destProjectName #>',
    "DestImplementedInterface": '<#= destImplementedInterface #>',
    "DestMethodName": '<#= destMethodName #>',
    "DestMethodParamTypes": ['<#= destMethodParamTypes[0] #>'],
    "DestMethodAccessType": '<#= destMethodAccessType #>',
    "DestMethodParamTypeForVar": '',
    "InvocationVarType": '',
    "InvocationParamType": '',
    "InvocationClassType": '<#= invocationClassType #>',
    "InvocationMethodName": '<#= invocationMethodName #>',
    "InvocationGenerics": ['<#= invocationGenerics[0] #>','<#= invocationGenerics[1] #>'],
    "InvocationParams": [],
    "StepDescription": 'Insertion the line : ViewModelLocationProvider.Register<<#= RlistUserControlClassName #>, <#= RlistViewModelClassName #>>();'
    },
<#
    }
{
    string RlistUserControlNameSpaceAndClassName            = RlistUserControlNameSpace + "." + RlistUserControlClassName;
    string RlistViewModelNameSpaceAndClassName              = RlistViewModelNameSpace + "." + RlistViewModelClassName;
    string destProjectName                                  = GetModelProjectUniqueName(Model, RlistUserControlFolder);
    string destImplementedInterface                         = "Prism.Modularity.IModule";
    string destMethodName                                   = "RegisterTypes";
    string[] destMethodParamTypes                           = new string[] {"Prism.Ioc.IContainerRegistry"};
    string destMethodAccessType                             = "public";
    string invocationParamType                              = "Prism.Ioc.IContainerRegistry";
    string invocationMethodName                             = "RegisterForRegionNavigation";
    string[] invocationGenerics                             = new string[]{RlistUserControlNameSpaceAndClassName,RlistViewModelNameSpaceAndClassName};
    string[] invocationParams                               = new string[]{"\"" + RlistUserControlClassName + "\""};
    //result = PrismModifier.UpdateMethodWithParamIdentifier(destProjectName,  destImplementedInterface, destMethodName, destMethodParamTypes, destMethodAccessType,
    //                    invocationParamType, invocationMethodName, invocationGenerics, invocationParams);
#>  
   {
    "Description": [],
    "MethodName": 'UpdateMethodWithParamIdentifier',
    "DestProjectName": '<#= destProjectName #>',
    "DestImplementedInterface": '<#= destImplementedInterface #>',
    "DestMethodName": '<#= destMethodName #>',
    "DestMethodParamTypes": ['<#= destMethodParamTypes[0] #>'],
    "DestMethodAccessType": '<#= destMethodAccessType #>',
    "DestMethodParamTypeForVar": '',
    "InvocationVarType": '',
    "InvocationParamType": '<#= invocationParamType #>',
    "InvocationClassType": '',
    "InvocationMethodName": '<#= invocationMethodName #>',
    "InvocationGenerics": ['<#= invocationGenerics[0] #>','<#= invocationGenerics[1] #>'],
    "InvocationParams": ['<#= invocationParams[0]  #>'],
    "StepDescription": 'Insertion the line : containerRegistry.RegisterForRegionNavigation<<#= RlistUserControlClassName #>, <#= RlistViewModelClassName #>>("<#= RlistUserControlClassName #>");'
    },
<#
}
{
    string RlistUserControlNameSpaceAndClassName            = RlistUserControlNameSpace + "." + RlistUserControlClassName;
    string RlistViewModelNameSpaceAndClassName              = RlistViewModelNameSpace + "." + RlistViewModelClassName;
    string destProjectName                                  = GetModelProjectUniqueName(Model, RlistUserControlFolder);
    string destImplementedInterface                         = "Prism.Modularity.IModule";
    string destMethodName                                   = "RegisterTypes";
    string[] destMethodParamTypes                           = new string[] {"Prism.Ioc.IContainerRegistry"};
    string destMethodAccessType                             = "public";
    string invocationParamType                              = "Prism.Ioc.IContainerRegistry";
    string invocationMethodName                             = "Register";
    string[] invocationGenerics                             = new string[]{"Xamarin.Forms.ContentView",RlistUserControlNameSpaceAndClassName};
    string[] invocationParams                               = new string[]{"\"" + RlistUserControlClassName + "\""};
    //result = PrismModifier.UpdateMethodWithParamIdentifier(destProjectName,  destImplementedInterface, destMethodName, destMethodParamTypes, destMethodAccessType,
    //                    invocationParamType, invocationMethodName, invocationGenerics, invocationParams);
#>  
   {
    "Description": [],
    "MethodName": 'UpdateMethodWithParamIdentifier',
    "DestProjectName": '<#= destProjectName #>',
    "DestImplementedInterface": '<#= destImplementedInterface #>',
    "DestMethodName": '<#= destMethodName #>',
    "DestMethodParamTypes": ['<#= destMethodParamTypes[0] #>'],
    "DestMethodAccessType": '<#= destMethodAccessType #>',
    "DestMethodParamTypeForVar": '',
    "InvocationVarType": '',
    "InvocationParamType": '<#= invocationParamType #>',
    "InvocationClassType": '',
    "InvocationMethodName": '<#= invocationMethodName #>',
    "InvocationGenerics": ['<#= invocationGenerics[0] #>','<#= invocationGenerics[1] #>'],
    "InvocationParams": ['<#= invocationParams[0]  #>'],
    "StepDescription": 'Insertion the line : containerRegistry.Register<ContentView, <#= RlistUserControlClassName #>>("<#= RlistUserControlClassName #>");'
    },
<#
}
#>
    ]
}



