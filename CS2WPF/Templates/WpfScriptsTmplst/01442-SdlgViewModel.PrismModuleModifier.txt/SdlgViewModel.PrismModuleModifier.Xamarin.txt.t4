<#@ template language="C#" HostSpecific="True" Debug="True" #>
<#@ output extension="jsonpmm2txt" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="CS2WPF" #>
<#@ import namespace="CS2WPF.Model" #>
<#@ import namespace="CS2WPF.Model.Serializable" #>
<#@ parameter type="CS2WPF.Model.Serializable.ModelViewSerializable" name="Model" #>
<#@ parameter type="CS2WPF.Model.Serializable.DbContextSerializable" name="Context" #>
<#@ include file="..\..\CommonScripts\ViewLevel.t4" #>
<#

    string IAppGlblSettingsServiceFolder                = "00080-IAppGlblSettingsService.cs";
    string IAppGlblSettingsServiceClassName             = GetContextModelClassName(Context, IAppGlblSettingsServiceFolder);
    string IAppGlblSettingsServiceNameSpace             = GetContextModelNameSpace(Context, IAppGlblSettingsServiceFolder);

    string IWebServiceFilterRsltInterfaceFolder         = "00204-IWebServiceFilterRsltInterface.cs";
    string IWebServiceFilterRsltInterfaceClassName      = GetContextModelClassName(Context, IWebServiceFilterRsltInterfaceFolder);
    string IWebServiceFilterRsltInterfaceNameSpace      = GetContextModelNameSpace(Context, IWebServiceFilterRsltInterfaceFolder);

    string SdlgViewModelBaseFolder                      = "00633-SdlgViewModelBase.cs";
    string SdlgViewModelBaseClassName                   = GetContextModelClassName(Context, SdlgViewModelBaseFolder);
    string SdlgViewModelBaseNameSpace                   = GetContextModelNameSpace(Context, SdlgViewModelBaseFolder);


    string SdlgViewModelFolder                          = "01440-SdlgViewModel.cs";
    string SdlgViewModelClassName                       = GetModelClassName(Model, SdlgViewModelFolder);
    string SdlgViewModelNameSpace                       = GetModelNameSpace(Model, SdlgViewModelFolder);
    string SdlgViewModelProject                         = GetModelProjectName(Model, SdlgViewModelFolder);

    string CaptionPropertyName                      = "Caption";
    string FilterHeightPropertyName                 = "FilterHeight";
    string GridHeightPropertyName                   = "GridHeight";
    string HiddenFiltersPropertyName                = "HiddenFilters";
    string AppSettingServicePropertyName            = "GlblSettingsSrv";
    string RegionPropertyName                       = "Region";
    string DialogRegionPropertyName                 = "DialogRegion";
    string OkCommandPropertyName                    = "OkCommand";
    string CancelCommandPropertyName                = "CancelCommand";
    string OnSelectedRowCommandPropertyName         = "OnSelectedRowCommand";
    string SelectedItemPropertyName                 = "SelectedItem";



    List<string> nmSpaces = new List<string>();
    if ((SdlgViewModelNameSpace != IWebServiceFilterRsltInterfaceNameSpace) && (nmSpaces.IndexOf(IWebServiceFilterRsltInterfaceNameSpace) < 0)) 
        nmSpaces.Add(IWebServiceFilterRsltInterfaceNameSpace);
    if ((SdlgViewModelNameSpace != IAppGlblSettingsServiceNameSpace) && (nmSpaces.IndexOf(IAppGlblSettingsServiceNameSpace) < 0)) 
        nmSpaces.Add(IAppGlblSettingsServiceNameSpace);


    string SformUserControlFolder           = "01420-SformUserControl.xaml.cs";
    string SformUserControlClassName        = GetModelClassName(Model, SformUserControlFolder);
    string SformUserControlNameSpace        = GetModelNameSpace(Model, SformUserControlFolder);
    string SformUserControlProject          = GetModelProjectName(Model, SformUserControlFolder);

    string SdlgUserControlFolder           = "01436-SdlgUserControl.xaml.cs";
    string SdlgUserControlClassName        = GetModelClassName(Model, SdlgUserControlFolder);
    string SdlgUserControlNameSpace        = GetModelNameSpace(Model, SdlgUserControlFolder);
    string SdlgUserControlProject          = GetModelProjectName(Model, SdlgUserControlFolder);

    bool IsInTheSameModule = (SformUserControlProject == SdlgUserControlProject);
    
    
#>
{
"PrismMMMCallItems": [


<#
    if(!IsInTheSameModule) {
#>
    {
    "Description": [
    '"<#= SformUserControlClassName #>"-UserControl is defined in the "<#= SformUserControlProject #>"-project.',
    'In the file of IModule-class of "<#= SformUserControlProject #>"-project the following line of code must be inserted:',
    ' ',
    '    public void OnInitialized(IContainerProvider containerProvider)',
    '    {',
    '        ...',
    '        IRegionManager regionManager = containerProvider.Resolve(typeof(IRegionManager)) as IRegionManager;',
    '        if (regionManager != null)',
    '        {',
    '            ...',
    '            // According to requirements of the "<#= SdlgViewModelClassName #>.cs"-file of "<#= SdlgViewModelProject #>"-project. ',
    '            regionManager.RegisterViewWithRegion("<#= SformUserControlClassName #><#= DialogRegionPropertyName #>", typeof(<#= SformUserControlClassName #>));',
    '            ...',
    '        }',
    '        ...',
    '    }',
    ],

<#
{
    string SformUserControlNameSpaceAndClassName            = SformUserControlNameSpace + "." + SformUserControlClassName;
    string destProjectName                                  = GetModelProjectUniqueName(Model, SformUserControlFolder);
    string destImplementedInterface                         = "Prism.Modularity.IModule";
    string destMethodName                                   = "OnInitialized";
    string[] destMethodParamTypes                           = new string[] {"Prism.Ioc.IContainerProvider"};
    string destMethodAccessType                             = "public";
    string destMethodParamTypeForVar                        = "Prism.Ioc.IContainerProvider";
    string invocationVarType                                = "Prism.Regions.IRegionManager";
    string invocationMethodName                             = "RegisterViewWithRegion";
    string[] invocationGenerics                             = new string[]{};
    string[] invocationParams                               = new string[]{"\"" + SformUserControlClassName + DialogRegionPropertyName  +"\"", "typeof("+SformUserControlNameSpaceAndClassName+")"};
    //result = PrismModifier.UpdateMethodWithVarIdentifier(destProjectName,  destImplementedInterface, destMethodName, destMethodParamTypes, destMethodAccessType, destMethodParamTypeForVar,
    //                    invocationVarType, invocationMethodName, invocationGenerics, invocationParams);
#>
    "MethodName": 'UpdateMethodWithVarIdentifier',
    "DestProjectName": '<#= destProjectName #>',
    "DestImplementedInterface": '<#= destImplementedInterface #>',
    "DestMethodName": '<#= destMethodName #>',
    "DestMethodParamTypes": ['Prism.Ioc.IContainerProvider'],
    "DestMethodAccessType": '<#= destMethodAccessType #>',
    "DestMethodParamTypeForVar": '<#= destMethodParamTypeForVar #>',
    "InvocationVarType": '<#= invocationVarType #>',
    "InvocationParamType": '',
    "InvocationClassType": '',
    "InvocationMethodName": '<#= invocationMethodName #>',
    "InvocationGenerics": [],
    "InvocationParams": ['<#= invocationParams[0] #>','<#= invocationParams[1] #>'],
    "StepDescription": 'Insertion the line : regionManager.RegisterViewWithRegion("<#= SformUserControlClassName #><#= DialogRegionPropertyName #>", typeof(<#= SformUserControlClassName #>));'
    },
<#

}
    } // end of if(!IsInTheSameModule) {
    
#>
    {
    "Description": [
    '"<#= SdlgUserControlClassName #>" UserControl is defined in the "<#= SdlgUserControlProject #>"-project.',
    'In the file of IModule-class of "<#= SdlgUserControlProject #>"-project the following line of code must be inserted:',
    ' ',
    '    public void RegisterTypes(IContainerRegistry containerRegistry)',
    '    {',
    '        ...',
    '        // According to requirements of the "<#= SdlgViewModelClassName #>.cs"-file of "<#= SdlgViewModelProject #>"-project. ',
    '        containerRegistry.RegisterDialog<<#= SdlgUserControlClassName #>, <#= SdlgViewModelBaseClassName #>>("<#= SdlgViewModelClassName #>");',
    '        ...',
    '    }',
    ],

<#
{
    string SdlgUserControlClassNameNameSpaceAndClassName    = SdlgUserControlNameSpace + "." + SdlgUserControlClassName;
    string SdlgViewModelBaseNameSpaceAndClassName           = SdlgViewModelBaseNameSpace + "." + SdlgViewModelBaseClassName;
    string destProjectName                                  = GetModelProjectUniqueName(Model, SdlgUserControlFolder);
    string destImplementedInterface                         = "Prism.Modularity.IModule";
    string destMethodName                                   = "RegisterTypes";
    string[] destMethodParamTypes                           = new string[] {"Prism.Ioc.IContainerRegistry"};
    string destMethodAccessType                             = "public";
    string invocationParamType                              = "Prism.Ioc.IContainerRegistry";
    string invocationMethodName                             = "RegisterDialog";
    string[] invocationGenerics                             = new string[]{SdlgUserControlClassNameNameSpaceAndClassName,SdlgViewModelBaseNameSpaceAndClassName};
    string[] invocationParams                               = new string[]{"\"" + SdlgViewModelClassName +"\""};
    //result = PrismModifier.UpdateMethodWithParamIdentifier(destProjectName,  destImplementedInterface, destMethodName, destMethodParamTypes, destMethodAccessType,
    //                    invocationParamType, invocationMethodName, invocationGenerics, invocationParams);
#>
    "MethodName": 'UpdateMethodWithParamIdentifier',
    "DestProjectName": '<#= destProjectName #>',
    "DestImplementedInterface": '<#= destImplementedInterface #>',
    "DestMethodName": '<#= destMethodName #>',
    "DestMethodParamTypes": ['<#= destMethodParamTypes[0] #>'],
    "DestMethodAccessType": '<#= destMethodAccessType #>',
    "DestMethodParamTypeForVar": '',
    "InvocationVarType": '',
    "InvocationParamType": '<#= invocationParamType #>',
    "InvocationClassType": '',
    "InvocationMethodName": '<#= invocationMethodName #>',
    "InvocationGenerics": ['<#= invocationGenerics[0] #>', '<#= invocationGenerics[1] #>'],
    "InvocationParams": ['<#= invocationParams[0] #>'],
    "StepDescription": 'Insertion the line : containerRegistry.RegisterDialog<<#= SdlgUserControlClassName #>, <#= SdlgViewModelBaseClassName #>>("<#= SdlgViewModelClassName #>");'
    },
<#
}
#>
    ]
}


