<#@ template language="C#" HostSpecific="True" Debug="True" #>
<#@ output extension="cs" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="CS2WPF" #>
<#@ import namespace="CS2WPF.Model" #>
<#@ import namespace="CS2WPF.Model.Serializable" #>
<#@ parameter type="CS2WPF.Model.Serializable.ModelViewSerializable" name="Model" #>
<#@ parameter type="CS2WPF.Model.Serializable.DbContextSerializable" name="Context" #>
<#@ include file="..\..\CommonScripts\ViewLevel.t4" #>
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
<# if(Model.GenerateJSonAttribute) { #>
using Newtonsoft.Json;
using Newtonsoft.Json.Serialization;
<# } #>
<#

    string modelInterfaceFolder      = "01100-Interface.cs";
    string modelInterfaceClassName   = GetInterfaceName(Model);
    string modelInterfaceNameSpace   = GetModelNameSpace(Model, modelInterfaceFolder);

    string modelPageInterfaceFolder      = "01200-Page.interface.cs";
    string modelPageInterfaceClassName   = GetPageInterfaceName(Model);
    string modelPageInterfaceNameSpace   = GetModelNameSpace(Model, modelPageInterfaceFolder);
    
    if(modelInterfaceNameSpace != modelPageInterfaceClassName) {
#>
using <#= modelInterfaceNameSpace #>;
<#
    }
#>

namespace <#= modelPageInterfaceNameSpace #> {
    public interface <#= modelPageInterfaceClassName #>
    {
<# if(Model.GenerateJSonAttribute) { #>
        [JsonProperty(PropertyName = "page")]
<# } #>
        int page { get; set; }

<# if(Model.GenerateJSonAttribute) { #>
        [JsonProperty(PropertyName = "pagesize")]
<# } #>
        int pagesize { get; set; }

<# if(Model.GenerateJSonAttribute) { #>
        [JsonProperty(PropertyName = "pagecount")]
<# } #>
        int pagecount { get; set; }

<# if(Model.GenerateJSonAttribute) { #>
        [JsonProperty(PropertyName = "total")]
<# } #>
        int total { get; set; }

<# if(Model.GenerateJSonAttribute) { #>
        [JsonProperty(PropertyName = "items")]
<# } #>
        IList<<#= modelInterfaceClassName #>> items { get; set; }
    }
}

