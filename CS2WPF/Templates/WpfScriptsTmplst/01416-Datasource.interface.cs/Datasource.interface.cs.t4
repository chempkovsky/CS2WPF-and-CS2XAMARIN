<#@ template language="C#" HostSpecific="True" Debug="True" #>
<#@ output extension="cs" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="CS2WPF" #>
<#@ import namespace="CS2WPF.Model" #>
<#@ import namespace="CS2WPF.Model.Serializable" #>
<#@ parameter type="CS2WPF.Model.Serializable.ModelViewSerializable" name="Model" #>
<#@ parameter type="CS2WPF.Model.Serializable.DbContextSerializable" name="Context" #>
<#@ include file="..\..\CommonScripts\ViewLevel.t4" #>
using System;
using System.Collections.Generic;
using System.Threading.Tasks;

<#



    string IViewmodeldatasourceinterfaceFolder       = "00610-IViewModelDataSourceInterface.cs";
    string IViewmodeldatasourceinterfaceClassName    = GetContextModelClassName(Context, IViewmodeldatasourceinterfaceFolder);
    string IViewmodeldatasourceinterfaceNameSpace    = GetContextModelNameSpace(Context, IViewmodeldatasourceinterfaceFolder);

    string datasourceInterfaceFolder         = "01416-Datasource.interface.cs";
    string datasourceInterfaceClassName      = GetModelDatasourceInterfaceName(Model);
    string datasourceInterfaceNameSpace      = GetModelNameSpace(Model, datasourceInterfaceFolder);






    List<string> nmSpaces = new List<string>();
    if ((datasourceInterfaceNameSpace != IViewmodeldatasourceinterfaceNameSpace) && (nmSpaces.IndexOf(IViewmodeldatasourceinterfaceNameSpace) < 0)) 
        nmSpaces.Add(IViewmodeldatasourceinterfaceNameSpace);

        
#>
<# 
    foreach(string ns in nmSpaces) {
#>
using <#= ns #>;
<#
    }
#>

namespace <#= datasourceInterfaceNameSpace #> {
    public interface <#= datasourceInterfaceClassName #>: <#= IViewmodeldatasourceinterfaceClassName #>
    {

    }
}

