<#@ template language="C#" HostSpecific="True" Debug="True" #>
<#@ output extension="cs" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="CS2WPF" #>
<#@ import namespace="CS2WPF.Model" #>
<#@ import namespace="CS2WPF.Model.Serializable" #>
<#@ parameter type="CS2WPF.Model.Serializable.ModelViewSerializable" name="Model" #>
<#@ parameter type="CS2WPF.Model.Serializable.DbContextSerializable" name="Context" #>
<#@ include file="..\..\CommonScripts\ViewLevel.t4" #>
using System;
using System.Collections.Generic;
using System.Threading.Tasks;

<#


    string IWebServiceFilterRsltInterfaceFolder     = "00204-IWebServiceFilterRsltInterface.cs";
    string IWebServiceFilterRsltInterfaceClassName  = GetContextModelClassName(Context, IWebServiceFilterRsltInterfaceFolder);
    string IWebServiceFilterRsltInterfaceNameSpace  = GetContextModelNameSpace(Context, IWebServiceFilterRsltInterfaceFolder);

    string IViewmodeldatasourceinterfaceFolder      = "00610-IViewModelDataSourceInterface.cs";
    string IViewmodeldatasourceinterfaceClassName   = GetContextModelClassName(Context, IViewmodeldatasourceinterfaceFolder);
    string IViewmodeldatasourceinterfaceNameSpace   = GetContextModelNameSpace(Context, IViewmodeldatasourceinterfaceFolder);

    string datasourceInterfaceFolder                = "01416-Datasource.interface.cs";
    string datasourceInterfaceClassName             = GetModelDatasourceInterfaceName(Model);
    string datasourceInterfaceNameSpace             = GetModelNameSpace(Model, datasourceInterfaceFolder);

    string modelInterfaceFolder                     = "01100-Interface.cs";
    string modelInterfaceClassName                  = GetInterfaceName(Model);
    string modelInterfaceNameSpace                  = GetModelNameSpace(Model, modelInterfaceFolder);

    string Values2InterfaceMethodName               = "Values2Interface";
    string GetClActByCurrDirMstrsMethodName         = "GetClActionByCurrDirMstrs";
    string Interface2ValuesMethodName               = "Interface2Values";
    string GetWSFltrRsltByCurrDirMstrsMethodName    = "GetWSFltrRsltByCurrDirMstrs";
    string GetClActByFldFilterMethodName            = "GetClActionByFldFilter";




    List<string> nmSpaces = new List<string>();
    if ((datasourceInterfaceNameSpace != IViewmodeldatasourceinterfaceNameSpace) && (nmSpaces.IndexOf(IViewmodeldatasourceinterfaceNameSpace) < 0)) 
        nmSpaces.Add(IViewmodeldatasourceinterfaceNameSpace);
    if ((datasourceInterfaceNameSpace != modelInterfaceNameSpace) && (nmSpaces.IndexOf(modelInterfaceNameSpace) < 0)) 
        nmSpaces.Add(modelInterfaceNameSpace);
    if ((datasourceInterfaceNameSpace != IWebServiceFilterRsltInterfaceNameSpace) && (nmSpaces.IndexOf(IWebServiceFilterRsltInterfaceNameSpace) < 0)) 
        nmSpaces.Add(IWebServiceFilterRsltInterfaceNameSpace);

        
#>
<# 
    foreach(string ns in nmSpaces) {
#>
using <#= ns #>;
<#
    }
#>

namespace <#= datasourceInterfaceNameSpace #> {
    public interface <#= datasourceInterfaceClassName #>: <#= IViewmodeldatasourceinterfaceClassName #>
    {
        <#= modelInterfaceClassName #> <#= Values2InterfaceMethodName #>();
        Task<IList<<#= modelInterfaceClassName #>>> <#= GetClActByCurrDirMstrsMethodName #>();
        bool <#= Interface2ValuesMethodName #>(<#= modelInterfaceClassName #> data, bool doNotify = true, bool aftrMstrChngd = false);
        IList<<#= IWebServiceFilterRsltInterfaceClassName #>> <#= GetWSFltrRsltByCurrDirMstrsMethodName #>();
        Task<IList<<#= modelInterfaceClassName #>>> <#= GetClActByFldFilterMethodName #>(string fldName, object fldVal);
    }
}

